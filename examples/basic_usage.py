"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è BM25Search - —á–∏—Å—Ç—ã–π BM25 —Å —Å—Ç–µ–º–º–∏–Ω–≥–æ–º –∏ –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π.
"""

from bm25search import SmartSearchEngine, smart_search, batch_search

def quick_search_example():
    """–ü—Ä–∏–º–µ—Ä –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –¥–≤–∏–∂–∫–∞."""
    print("üîç –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫:")
    
    documents = [
        "–ö–æ—Ç —Å–∏–¥–∏—Ç –Ω–∞ –æ–∫–Ω–µ –∏ —Å–º–æ—Ç—Ä–∏—Ç –Ω–∞ —É–ª–∏—Ü—É",
        "–°–æ–±–∞–∫–∞ –∏–≥—Ä–∞–µ—Ç –≤ –ø–∞—Ä–∫–µ —Å –¥–µ—Ç—å–º–∏", 
        "–ö—Ä–∞—Å–∏–≤–∞—è –∫–æ—à–∫–∞ —Å–ø–∏—Ç –Ω–∞ –¥–∏–≤–∞–Ω–µ",
        "–£–º–Ω–∞—è —Å–æ–±–∞–∫–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–∞–Ω–¥—ã —Ö–æ–∑—è–∏–Ω–∞"
    ]
    
    query = "–∫–æ—Ç"
    results = smart_search(documents, query, top_k=2)
    
    print(f"–ó–∞–ø—Ä–æ—Å: '{query}'")
    for doc_id, score, content in results:
        print(f"  {score:.2f} - {content}")
    print()

def advanced_search_example():
    """–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
    print("‚öôÔ∏è –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–æ–∏—Å–∫:")
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    engine = SmartSearchEngine(
        db_path="advanced_demo.db",
        k1=1.2,  # –ú–µ–Ω–µ–µ –∞–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –Ω–∞—Å—ã—â–µ–Ω–∏–µ –ø–æ —á–∞—Å—Ç–æ—Ç–µ
        b=0.8    # –ë–æ–ª—å—à–∏–π –≤–µ—Å –¥–ª–∏–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç–∞
    )
    
    documents = [
        "–ú–∞—à–∏–Ω–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ - —ç—Ç–æ –ø–æ–¥—Ä–∞–∑–¥–µ–ª –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞",
        "–ù–µ–π—Ä–æ–Ω–Ω—ã–µ —Å–µ—Ç–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è",
        "–ê–ª–≥–æ—Ä–∏—Ç–º—ã –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ—à–∞—é—Ç –∑–∞–¥–∞—á–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏",
        "–†–µ–≥—Ä–µ—Å—Å–∏–æ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è"
    ]
    
    engine.index_documents(documents)
    
    query = "–æ–±—É—á–µ–Ω–∏–µ"
    results = engine.search(query, top_k=3)
    
    print(f"–ó–∞–ø—Ä–æ—Å: '{query}'")
    for doc_id, score, content in results:
        print(f"  {score:.2f} - {content}")
    
    # –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ
    print("\nüìä –û–±—ä—è—Å–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
    explanation = engine.explain_search(query, doc_id=0)
    print(f"BM25 —Å–∫–æ—Ä: {explanation['bm25_score']:.3f}")
    print(f"–§–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫–æ—Ä: {explanation['final_score']:.3f}")
    
    engine.close()
    print()

def multilingual_search_example():
    """–ü—Ä–∏–º–µ—Ä –º–Ω–æ–≥–æ—è–∑—ã—á–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞."""
    print("üåç –ú–Ω–æ–≥–æ—è–∑—ã—á–Ω—ã–π –ø–æ–∏—Å–∫:")
    
    engine = SmartSearchEngine(db_path="multilingual_demo.db")
    
    documents = [
        "The cat sits on the windowsill",
        "–ö–æ—Ç —Å–∏–¥–∏—Ç –Ω–∞ –ø–æ–¥–æ–∫–æ–Ω–Ω–∏–∫–µ", 
        "A dog plays in the garden",
        "–°–æ–±–∞–∫–∞ –∏–≥—Ä–∞–µ—Ç –≤ —Å–∞–¥—É",
        "Beautiful flowers bloom in spring",
        "–ö—Ä–∞—Å–∏–≤—ã–µ —Ü–≤–µ—Ç—ã —Ü–≤–µ—Ç—É—Ç –≤–µ—Å–Ω–æ–π"
    ]
    
    engine.index_documents(documents)
    
    # –ü–æ–∏—Å–∫ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
    results_ru = engine.search("–∫–æ—Ç", top_k=2)
    print("–ü–æ–∏—Å–∫ '–∫–æ—Ç':")
    for doc_id, score, content in results_ru:
        print(f"  {score:.2f} - {content}")
    
    # –ü–æ–∏—Å–∫ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º  
    results_en = engine.search("cat", top_k=2)
    print("\n–ü–æ–∏—Å–∫ 'cat':")
    for doc_id, score, content in results_en:
        print(f"  {score:.2f} - {content}")
    
    engine.close()
    print()

def stemming_lemmatization_example():
    """–ü—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å—Ç–µ–º–º–∏–Ω–≥–∞ –∏ –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏–∏."""
    print("üîß –°—Ç–µ–º–º–∏–Ω–≥ –∏ –ª–µ–º–º–∞—Ç–∏–∑–∞—Ü–∏—è:")
    
    engine = SmartSearchEngine(db_path="stemming_demo.db")
    
    documents = [
        "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—ã",
        "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "–ö–æ–¥–µ—Ä –∫–æ–¥–∏—Ç –∫–æ–¥ –Ω–∞ Python",
        "–ò–Ω–∂–µ–Ω–µ—Ä –ø—Ä–æ–µ–∫—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—ã"
    ]
    
    engine.index_documents(documents)
    
    # –ü–æ–∏—Å–∫ –ø–æ —Ä–∞–∑–Ω—ã–º —Ñ–æ—Ä–º–∞–º —Å–ª–æ–≤–∞
    queries = ["–ø—Ä–æ–≥—Ä–∞–º–º–∞", "–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ", "—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–∫–æ–¥"]
    
    for query in queries:
        results = engine.search(query, top_k=2)
        print(f"–ó–∞–ø—Ä–æ—Å '{query}':")
        for doc_id, score, content in results:
            print(f"  {score:.2f} - {content}")
        print()
    
    engine.close()

def batch_search_example():
    """–ü—Ä–∏–º–µ—Ä –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞."""
    print("üì¶ –ü–∞–∫–µ—Ç–Ω—ã–π –ø–æ–∏—Å–∫:")
    
    documents = [
        "Python - –º–æ—â–Ω—ã–π —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è",
        "JavaScript –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏",
        "SQL –Ω—É–∂–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö",
        "HTML —Å–æ–∑–¥–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä—É –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü"
    ]
    
    queries = ["Python", "–≤–µ–±", "–¥–∞–Ω–Ω—ã–µ"]
    
    all_results = batch_search(documents, queries, top_k=2)
    
    for query, results in all_results.items():
        print(f"–ó–∞–ø—Ä–æ—Å '{query}':")
        for doc_id, score, content in results:
            print(f"  {score:.2f} - {content}")
        print()

def main():
    """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤."""
    print("üöÄ –ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è BM25Search (—á–∏—Å—Ç—ã–π BM25)\n")
    
    quick_search_example()
    advanced_search_example() 
    multilingual_search_example()
    stemming_lemmatization_example()
    batch_search_example()
    
    print("‚úÖ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!")

if __name__ == "__main__":
    main()
